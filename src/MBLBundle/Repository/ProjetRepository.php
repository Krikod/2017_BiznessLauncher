<?php

namespace MBLBundle\Repository;

/**
 * ProjetRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProjetRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param $locale
     * @return array
     */
    public function findLastProjets4($locale)
    {
        $qb = $this->createQueryBuilder('p');
        $qb->select('p.description' . $locale . ' as description','p.id as id','p.titre' .$locale. ' as titre','p.localisation'.$locale.' as localiprojet');
            /*->join('p.profilsrecherches', 'r')
            ->join('r.metier', 'm')
            ->addSelect('m.metier' . $locale . ' as metier');*/


        $projets = $qb->getQuery()->getResult();


        foreach ($projets as $key => $projet)
        {
            $qb = $this->createQueryBuilder('p');
            $qb->join('p.profilsrecherches', 'r')
                ->join('r.metier', 'm')
                ->select('m.metier' . $locale . ' as metier');
            $projets[$key]['metier'] = $qb->getQuery()->getResult();
        }

    /*dump($projets); die();*/

        return $projets;

    }

    public function findAllDesc()
    {
        return $this ->createQueryBuilder('p')
            ->select('p')
            ->orderBy('p.dateCreation', 'DESC')
            ->getQuery()
            ->getResult()
            ;// TODO: Change the autogenerated stub
    }

    public function findAllMyProjects($profilId)
    {
        return $this ->createQueryBuilder('p')
            ->select('p')
            ->orderBy('p.dateCreation', 'DESC')
            ->join('p.profils', 'pp')
            ->where('pp.id = :profilId')
            ->setParameter('profilId', $profilId)
            ->getQuery()
            ->getResult();// TODO: Change the autogenerated stub
    }
    public function myfindBySecteur($secteur)
    {
        return $this ->createQueryBuilder('p')
            ->select('p')
            ->orderBy('p.dateCreation', 'DESC')
            ->join('p.secteur', 'pp')
            ->where('pp.id = :secteurId')
            ->setParameter('secteurId', $secteur)
            ->getQuery()
            ->getResult();// TODO: Change the autogenerated stub
    }
    public function myfindByTypeDeProjet($typeDeProjet)
    {
        return $this ->createQueryBuilder('p')
            ->select('p')
            ->orderBy('p.dateCreation', 'DESC')
            ->join('p.typeDeProjet', 'pp')
            ->where('pp.id = :typeDeProjetId')
            ->setParameter('typeDeProjetId', $typeDeProjet)
            ->getQuery()
            ->getResult();// TODO: Change the autogenerated stub
    }
    public function myfindByTypEtSec($idSec, $idTyp)
    {
        return $this ->createQueryBuilder('p')
            ->select('p')
            ->orderBy('p.dateCreation', 'DESC')
            ->join('p.typeDeProjet', 'ptyp')
            ->join('p.secteur', 'psec')
            ->where('ptyp.id = :typeDeProjetId')
            ->setParameter('typeDeProjetId', $idTyp)
            ->andWhere('psec.id = :secteurId')
            ->setParameter('secteurId', $idSec)
            ->getQuery()
            ->getResult();// TODO: Change the autogenerated stub
    }
}